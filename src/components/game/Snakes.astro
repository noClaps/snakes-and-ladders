---
interface Props {
    snakesArray: number[][];
}

const { snakesArray } = Astro.props;
---

<canvas
    hx-get="/partials/update-snakes"
    hx-trigger="click from:#reset"
    hx-swap="outerHTML"
    hx-on::after-swap="console.log('swap complete')"
    id="snakes"
    data-snakes={JSON.stringify(snakesArray)}></canvas>

<style>
    canvas {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
    }
</style>

<script>
    document.addEventListener("htmx:load", createSnakes);

    function createSnakes() {
        const canvas = document.querySelector<HTMLCanvasElement>("#snakes")!;
        const ctx = canvas.getContext("2d")!;
        const snakes: number[][] = JSON.parse(canvas.dataset.snakes!);

        canvas.width = document.documentElement.clientWidth;
        canvas.height = document.documentElement.clientHeight;

        for (const snake of snakes) {
            const square0 = document
                .querySelector(`#position-${snake[0]}`)!
                .getBoundingClientRect();
            const square1 = document
                .querySelector(`#position-${snake[1]}`)!
                .getBoundingClientRect();

            const x0 = square0.x + square0.width / 2;
            const y0 = square0.y + square0.height / 2;
            const x1 = square1.x + square1.width / 2;
            const y1 = square1.y + square1.height / 2;

            ctx.beginPath();
            ctx.lineWidth = 2;
            ctx.strokeStyle = "red";
            ctx.moveTo(x0, y0);
            ctx.lineTo(x1, y1);
            ctx.stroke();
        }
    }
</script>
